import main
import settings

from aiogram import Bot, Dispatcher, types, executor
from aiogram.dispatcher.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

TG_TOKEN = settings.TOKEN

bot = Bot(token=TG_TOKEN)
dp = Dispatcher(bot)

StartButton = KeyboardButton("/help")
Normal_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(StartButton)


@dp.message_handler(Command("start"))
async def cmd_start(message: types.Message):
    await message.reply(
        "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º\n–ê–≤—Ç–æ—Ä: @hkk89",
        reply_markup=Normal_kb
    )


@dp.message_handler(Command("help"))
async def cmd_help(message: types.Message):
    await message.reply(
        "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –±–æ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–ª —Ç–µ–∫—Å—Ç:\nüî∏ –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–µ–Ω–µ–µ 500 –±—É–∫–≤.\nüî∏ –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤.\nüî∏ –ë–æ—Ç –º–æ–∂–µ—Ç –Ω–µ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, —ç—Ç–æ –æ—à–∏–±–∫–∞ –Ω–µ –±–æ—Ç–∞, –∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –Ω–µ–π—Ä–æ–Ω–Ω–æ–π —Å–µ—Ç–∏.\nüî∏ –ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É –∏ –∂–¥–∏—Ç–µ."
    )


@dp.message_handler(content_types='text')
async def MainButton(message: types.Message):
    await message.reply("–¢–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω")

    main.text_to_speech(message.text)

    voice = types.InputFile('speech.wav')
    await bot.send_voice(message.from_user.id, voice, caption="–û—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞")


if __name__ == "__main__":
    try:
        executor.start_polling(dp, skip_updates=True)
    except (KeyboardInterrupt, SystemExit):
        pass
